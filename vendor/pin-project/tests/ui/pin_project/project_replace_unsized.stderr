error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:3:15
  |
3 | #[pin_project(project_replace)] //~ ERROR E0277
  |               ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
4 | struct Struct<T: ?Sized> {
  |               - this type parameter needs to be `std::marker::Sized`
  |
note: required because it appears within the type `Struct<T>`
 --> $DIR/project_replace_unsized.rs:4:8
  |
4 | struct Struct<T: ?Sized> {
  |        ^^^^^^
  = help: unsized fn params are gated as an unstable feature
help: function arguments must have a statically known size, borrowed types always have a known size
  |
3 | #[pin_project(&project_replace)] //~ ERROR E0277
  |               ^

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:3:1
  |
3 | #[pin_project(project_replace)] //~ ERROR E0277
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
4 | struct Struct<T: ?Sized> {
  |               - this type parameter needs to be `std::marker::Sized`
  |
note: required because it appears within the type `Struct<T>`
 --> $DIR/project_replace_unsized.rs:4:8
  |
4 | struct Struct<T: ?Sized> {
  |        ^^^^^^
  = note: required by `UnsafeOverwriteGuard`
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> $DIR/project_replace_unsized.rs:5:5
    |
4   | struct Struct<T: ?Sized> {
    |               - this type parameter needs to be `std::marker::Sized`
5   |     f: T,
    |     ^ doesn't have a size known at compile-time

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:8:15
  |
8 | #[pin_project(project_replace)] //~ ERROR E0277
  |               ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
9 | struct TupleStruct<T: ?Sized>(T);
  |                    - this type parameter needs to be `std::marker::Sized`
  |
note: required because it appears within the type `TupleStruct<T>`
 --> $DIR/project_replace_unsized.rs:9:8
  |
9 | struct TupleStruct<T: ?Sized>(T);
  |        ^^^^^^^^^^^
  = help: unsized fn params are gated as an unstable feature
help: function arguments must have a statically known size, borrowed types always have a known size
  |
8 | #[pin_project(&project_replace)] //~ ERROR E0277
  |               ^

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:8:1
  |
8 | #[pin_project(project_replace)] //~ ERROR E0277
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
9 | struct TupleStruct<T: ?Sized>(T);
  |                    - this type parameter needs to be `std::marker::Sized`
  |
note: required because it appears within the type `TupleStruct<T>`
 --> $DIR/project_replace_unsized.rs:9:8
  |
9 | struct TupleStruct<T: ?Sized>(T);
  |        ^^^^^^^^^^^
  = note: required by `UnsafeOverwriteGuard`
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
 --> $DIR/project_replace_unsized.rs:9:8
  |
9 | struct TupleStruct<T: ?Sized>(T);
  |        ^^^^^^^^^^^ - this type parameter needs to be `std::marker::Sized`
  |        |
  |        doesn't have a size known at compile-time
  |
  = note: all function arguments must have a statically known size
  = help: unsized fn params are gated as an unstable feature
